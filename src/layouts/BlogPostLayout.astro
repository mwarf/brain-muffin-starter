---
// src/layouts/BlogPostLayout.astro
import BaseLayout from '@/layouts/BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
	post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { Content } = await post.render(); // Get the rendered content component
---
<BaseLayout title={post.data.title} description={post.data.description}>
  <article class="container max-w-3xl py-12">
    <!-- Post Header -->
    <header class="mb-8">
      <h1 class="text-4xl md:text-5xl font-bold mb-3">{post.data.title}</h1>
      <div class="text-muted-foreground text-sm">
        <span>Published: {post.data.pubDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
        {post.data.updatedDate && (
          <span class="mx-2">|</span>
          <span>Updated: {post.data.updatedDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
        )}
        {post.data.author && (
          <span class="mx-2">|</span>
          <span>By: {post.data.author}</span>
        )}
      </div>
      {post.data.categories && (
        <div class="mt-2 text-xs text-muted-foreground">
          Categories: {post.data.categories.join(', ')}
        </div>
      )}
       {post.data.tags && (
        <div class="mt-1 text-xs text-muted-foreground">
          Tags: {post.data.tags.join(', ')}
        </div>
      )}
    </header>

    {post.data.heroImage && (
      <img 
        src={post.data.heroImage} 
        alt={post.data.title} 
        class="w-full rounded-lg mb-8 aspect-video object-cover" 
      />
    )}

    <!-- Post Content -->
    <div class="prose dark:prose-invert max-w-none">
      <Content />
    </div>

    <!-- Back to Blog Link -->
    <div class="mt-12 pt-8 border-t">
      <a href="/blog" class="text-primary hover:underline">&larr; Back to Blog</a>
    </div>
  </article>
</BaseLayout>

<!-- Removed <style is:global> block with @apply rules. 
     Relying on default Tailwind prose classes for markdown content styling. 
     If further customization is needed, consider adding the @tailwindcss/typography plugin 
     and configuring it in tailwind.config.mjs, or applying classes directly in the markdown/MDX. 
-->
